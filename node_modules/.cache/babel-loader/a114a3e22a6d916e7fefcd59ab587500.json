{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-Kamasutra\\\\project\\\\01-first-project\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {\n    dialog: dialogsElements,\n    message: messagesElements,\n    post: postsElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this));\nlet dialogsData = [{\n  id: 1,\n  name: 'Dimych'\n}, {\n  id: 2,\n  name: 'Yanych'\n}, {\n  id: 3,\n  name: 'Arthur'\n}];\nlet dialogsElements = dialogsData.map(dialog => /*#__PURE__*/_jsxDEV(Dialog, {\n  className: classes.dialog,\n  name: dialog.name,\n  id: dialog.id\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 12\n}, this));\nlet messagesData = [{\n  id: 1,\n  message: 'Hay-hay'\n}, {\n  id: 2,\n  message: 'Hay'\n}, {\n  id: 3,\n  message: 'hay'\n}, {\n  id: 3,\n  message: 'poka'\n}];\nlet messagesElements = messagesData.map(message => /*#__PURE__*/_jsxDEV(Message, {\n  id: message.id,\n  message: message.message\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 13\n}, this));\nlet postsData = [{\n  id: 1,\n  message: 'Hi, how are you?',\n  likesCount: '20'\n}, {\n  id: 2,\n  message: 'It\\'s my first post',\n  likesCount: '15'\n}];\nlet postsElements = postsData.map(post => /*#__PURE__*/_jsxDEV(Post, {\n  id: post.id,\n  message: post.message,\n  likesCount: post.likesCount\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 43\n}, this)); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","root","createRoot","document","getElementById","render","dialogsElements","messagesElements","postsElements","dialogsData","id","name","map","dialog","classes","messagesData","message","postsData","likesCount","post"],"sources":["E:/React-Kamasutra/project/01-first-project/my-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App dialog={dialogsElements} message={messagesElements} post={postsElements}/>\n  </React.StrictMode>\n);\n\nlet dialogsData = [\n\t{ id: 1, name: 'Dimych' },\n\t{ id: 2, name: 'Yanych' },\n\t{ id: 3, name: 'Arthur' }\n]\n\nlet dialogsElements = dialogsData.map(\n\tdialog =>\t<Dialog className={classes.dialog} name={dialog.name} id={dialog.id} /> );\n\nlet messagesData = [\n\t{ id: 1, message: 'Hay-hay' },\n\t{ id: 2, message: 'Hay' },\n\t{ id: 3, message: 'hay' },\n\t{ id: 3, message: 'poka' }\n]\n\nlet messagesElements = messagesData.map(\n\tmessage => <Message id={message.id} message={message.message} />\n);\n\nlet postsData = [\n\t{ id: 1, message: 'Hi, how are you?', likesCount: '20' },\n\t{ id: 2, message: 'It\\'s my first post', likesCount: '15' }\n]\n\nlet postsElements = postsData.map(post => <Post id={post.id} message={post.message} likesCount={post.likesCount} />);\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,IAAI,GAAGH,QAAQ,CAACI,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eACE,QAAC,KAAD,CAAO,UAAP;EAAA,uBACE,QAAC,GAAD;IAAK,MAAM,EAAEC,eAAb;IAA8B,OAAO,EAAEC,gBAAvC;IAAyD,IAAI,EAAEC;EAA/D;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF;AAMA,IAAIC,WAAW,GAAG,CACjB;EAAEC,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE;AAAf,CADiB,EAEjB;EAAED,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE;AAAf,CAFiB,EAGjB;EAAED,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE;AAAf,CAHiB,CAAlB;AAMA,IAAIL,eAAe,GAAGG,WAAW,CAACG,GAAZ,CACrBC,MAAM,iBAAI,QAAC,MAAD;EAAQ,SAAS,EAAEC,OAAO,CAACD,MAA3B;EAAmC,IAAI,EAAEA,MAAM,CAACF,IAAhD;EAAsD,EAAE,EAAEE,MAAM,CAACH;AAAjE;EAAA;EAAA;EAAA;AAAA,QADW,CAAtB;AAGA,IAAIK,YAAY,GAAG,CAClB;EAAEL,EAAE,EAAE,CAAN;EAASM,OAAO,EAAE;AAAlB,CADkB,EAElB;EAAEN,EAAE,EAAE,CAAN;EAASM,OAAO,EAAE;AAAlB,CAFkB,EAGlB;EAAEN,EAAE,EAAE,CAAN;EAASM,OAAO,EAAE;AAAlB,CAHkB,EAIlB;EAAEN,EAAE,EAAE,CAAN;EAASM,OAAO,EAAE;AAAlB,CAJkB,CAAnB;AAOA,IAAIT,gBAAgB,GAAGQ,YAAY,CAACH,GAAb,CACtBI,OAAO,iBAAI,QAAC,OAAD;EAAS,EAAE,EAAEA,OAAO,CAACN,EAArB;EAAyB,OAAO,EAAEM,OAAO,CAACA;AAA1C;EAAA;EAAA;EAAA;AAAA,QADW,CAAvB;AAIA,IAAIC,SAAS,GAAG,CACf;EAAEP,EAAE,EAAE,CAAN;EAASM,OAAO,EAAE,kBAAlB;EAAsCE,UAAU,EAAE;AAAlD,CADe,EAEf;EAAER,EAAE,EAAE,CAAN;EAASM,OAAO,EAAE,qBAAlB;EAAyCE,UAAU,EAAE;AAArD,CAFe,CAAhB;AAKA,IAAIV,aAAa,GAAGS,SAAS,CAACL,GAAV,CAAcO,IAAI,iBAAI,QAAC,IAAD;EAAM,EAAE,EAAEA,IAAI,CAACT,EAAf;EAAmB,OAAO,EAAES,IAAI,CAACH,OAAjC;EAA0C,UAAU,EAAEG,IAAI,CAACD;AAA3D;EAAA;EAAA;EAAA;AAAA,QAAtB,CAApB,C,CAMA;AACA;AACA;;AACAlB,eAAe"},"metadata":{},"sourceType":"module"}