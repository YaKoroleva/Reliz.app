{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-Kamasutra\\\\project\\\\01-first-project\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './Dialogs.module.css';\nimport Dialog from './Dialog/Dialog';\nimport Message from './Message/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  let dialogsData = [{\n    id: 1,\n    name: 'Dimych'\n  }, {\n    id: 2,\n    name: 'Yanych'\n  }, {\n    id: 3,\n    name: 'Arthur'\n  }];\n  let dialogsElements = dialogsData.map(dialog => /*#__PURE__*/_jsxDEV(Dialog, {\n    className: classes.dialog,\n    name: dialog.name,\n    id: dialog.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this)); //массив диалогов на основе DATA (базы данных)\n\n  let messagesData = [{\n    id: 1,\n    message: 'Hay-hay'\n  }, {\n    id: 2,\n    message: 'Hay'\n  }, {\n    id: 3,\n    message: 'hay'\n  }];\n  let messageElements = [/*#__PURE__*/_jsxDEV(Message, {\n    message: messagesData[0].message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(Message, {\n    message: messagesData[1].message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(Message, {\n    message: messagesData[2].message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dialogsItems,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.messages,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.message_wrapper,\n        children: messageElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"names":["React","NavLink","classes","Dialog","Message","Dialogs","props","dialogsData","id","name","dialogsElements","map","dialog","messagesData","message","messageElements","dialogs","dialogsItems","messages","message_wrapper"],"sources":["E:/React-Kamasutra/project/01-first-project/my-app/src/components/Dialogs/Dialogs.jsx"],"sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Dialogs.module.css';\r\nimport Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\n\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n\tlet dialogsData = [\r\n\t\t{ id: 1, name: 'Dimych' },\r\n\t\t{ id: 2, name: 'Yanych' },\r\n\t\t{ id: 3, name: 'Arthur' }\r\n\t]\r\n\r\nlet dialogsElements = dialogsData.map(\r\n\tdialog =>\t<Dialog className={classes.dialog} name={dialog.name} id={dialog.id} /> );\r\n\t//массив диалогов на основе DATA (базы данных)\r\n\r\n\r\n\r\n\tlet messagesData = [\r\n\t\t{ id: 1, message: 'Hay-hay' },\r\n\t\t{ id: 2, message: 'Hay' },\r\n\t\t{ id: 3, message: 'hay' }\r\n\t]\r\n\r\n\r\n\r\n\tlet messageElements = [\r\n\t\t<Message message={messagesData[0].message} />,\r\n\t\t<Message message={messagesData[1].message} />,\r\n\t\t<Message message={messagesData[2].message} />\r\n\t]\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<div className={classes.dialogsItems}>\r\n\t\t\t\t{dialogsElements}\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={classes.messages}>\r\n\t\t\t\t<div className={classes.message_wrapper}>\r\n\t\t\t\t\t{messageElements}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAMA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAG1B,IAAIC,WAAW,GAAG,CACjB;IAAEC,EAAE,EAAE,CAAN;IAASC,IAAI,EAAE;EAAf,CADiB,EAEjB;IAAED,EAAE,EAAE,CAAN;IAASC,IAAI,EAAE;EAAf,CAFiB,EAGjB;IAAED,EAAE,EAAE,CAAN;IAASC,IAAI,EAAE;EAAf,CAHiB,CAAlB;EAMD,IAAIC,eAAe,GAAGH,WAAW,CAACI,GAAZ,CACrBC,MAAM,iBAAI,QAAC,MAAD;IAAQ,SAAS,EAAEV,OAAO,CAACU,MAA3B;IAAmC,IAAI,EAAEA,MAAM,CAACH,IAAhD;IAAsD,EAAE,EAAEG,MAAM,CAACJ;EAAjE;IAAA;IAAA;IAAA;EAAA,QADW,CAAtB,CAT2B,CAW1B;;EAIA,IAAIK,YAAY,GAAG,CAClB;IAAEL,EAAE,EAAE,CAAN;IAASM,OAAO,EAAE;EAAlB,CADkB,EAElB;IAAEN,EAAE,EAAE,CAAN;IAASM,OAAO,EAAE;EAAlB,CAFkB,EAGlB;IAAEN,EAAE,EAAE,CAAN;IAASM,OAAO,EAAE;EAAlB,CAHkB,CAAnB;EAQA,IAAIC,eAAe,GAAG,cACrB,QAAC,OAAD;IAAS,OAAO,EAAEF,YAAY,CAAC,CAAD,CAAZ,CAAgBC;EAAlC;IAAA;IAAA;IAAA;EAAA,QADqB,eAErB,QAAC,OAAD;IAAS,OAAO,EAAED,YAAY,CAAC,CAAD,CAAZ,CAAgBC;EAAlC;IAAA;IAAA;IAAA;EAAA,QAFqB,eAGrB,QAAC,OAAD;IAAS,OAAO,EAAED,YAAY,CAAC,CAAD,CAAZ,CAAgBC;EAAlC;IAAA;IAAA;IAAA;EAAA,QAHqB,CAAtB;EAQA,oBACC;IAAK,SAAS,EAAEZ,OAAO,CAACc,OAAxB;IAAA,wBACC;MAAK,SAAS,EAAEd,OAAO,CAACe,YAAxB;MAAA,UACEP;IADF;MAAA;MAAA;MAAA;IAAA,QADD,eAMC;MAAK,SAAS,EAAER,OAAO,CAACgB,QAAxB;MAAA,uBACC;QAAK,SAAS,EAAEhB,OAAO,CAACiB,eAAxB;QAAA,UACEJ;MADF;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA,QAND;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAcA,CA7CD;;KAAMV,O;AA+CN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}